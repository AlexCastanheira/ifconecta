<!DOCTYPE html>
<html lang="pt-BR">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Editar Perfil - If(Conecta)</title>
    <link rel="stylesheet" href="/css/styles.css">
    <link rel="stylesheet" href="/css/perfil.css">
    <link rel="stylesheet" href="/css/vagas.css">
    <link rel="stylesheet" href="/css/notifications.css">
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <script src="https://cdn.quilljs.com/1.3.6/quill.min.js"></script>
    <script src="/js/quill.js"></script>

</head>

<body>
    <%- include('partials/header') %>

        <main class="container">

            <% if (error) { %>
                <div class="error-message">
                    <%= error %>
                </div>
                <% } %>

                    <div class="profile-container">
                        <div class="profile-header">
                            <div class="profile-photo">
                                <% if (user.photo) { %>
                                    <img src="/uploads/<%= user.photo %>" alt="<%= user.name %>">
                                    <% } else { %>
                                        <div class="no-photo">
                                            <%= user.name.charAt(0).toUpperCase() %>
                                        </div>
                                        <% } %>
                            </div>

                            <div class="profile-info">
                                <h3>
                                    <%= user.name %>
                                </h3>
                                <p>
                                    <%= user.email %>
                                </p>
                            </div>
                        </div>

                        <div class="profile-content">
                            <form action="/users/perfil-estudante" method="POST" enctype="multipart/form-data">
                                <div class="form-group">
                                    <label for="name">Nome</label>
                                    <input type="text" id="name" name="name" value="<%= user.name %>" required>
                                </div>

                                <div class="form-group">
                                    <label for="photo">Foto de Perfil</label>
                                    <input type="file" id="photo" name="photo">
                                    <% if (user.photo) { %>
                                        <p class="form-help">Deixe em branco para manter a foto atual.</p>
                                        <% } %>
                                </div>

                                <div class="form-group">
                                    <label for="bio">Biografia</label>
                                    <textarea id="bio" name="bio" class="quill-editor"
                                        rows="10"><%= user.profile %></textarea>
                                </div>

                                <div class="form-group">
                                    <label for="links">Links (um por linha)</label>
                                    <textarea id="links" name="links"
                                        rows="4"><%= user.links.map(link => link.url).join('\n') %></textarea>
                                </div>

                                <div class="form-actions">
                                    <a href="/users/perfil-estudante" class="btn secondary-btn">Cancelar</a>
                                    <button type="submit" class="btn primary-btn">Salvar Alterações</button>
                                </div>
                            </form>
                        </div>

                        <div class="profile-badges">
                            <h3>Minhas Habilidades</h3>

                            <div id="user-badges" class="badges-container">
                                <% if (user.badges && user.badges.length> 0) { %>
                                    <% user.badges.forEach(userBadge=> { %>
                                        <div class="badge" data-badge-id="<%= userBadge.badgeId %>">
                                            <%= userBadge.badge.name %>
                                                <button class="remove-badge"
                                                    data-badge-id="<%= userBadge.badgeId %>">×</button>
                                        </div>
                                        <% }) %>
                                            <% } else { %>
                                                <p id="no-badges-message">Nenhuma habilidade adicionada ainda.</p>
                                                <% } %>
                            </div>

                            <div class="add-badge-form">
                                <h4>Adicionar Habilidades</h4>
                                <div id="skills-grid" class="skills-grid">
                                    <% if (availableBadges && availableBadges.length> 0) { %>
                                        <% availableBadges.forEach(badge=> { %>
                                            <div class="skill-badge" data-badge-id="<%= badge.id %>"
                                                data-badge-name="<%= badge.name %>">
                                                <span class="badge-icon">
                                                    <i data-feather="code" class="badge-icon-svg"></i>
                                                </span>
                                                <span class="badge-text">
                                                    <%= badge.name %>
                                                </span>
                                            </div>
                                            <% }) %>
                                                <% } else { %>
                                                    <p id="no-available-badges">Não há mais habilidades disponíveis para
                                                        adicionar.</p>
                                                    <% } %>
                                </div>
                            </div>
                        </div>
                    </div>
        </main>

        <%- include('partials/footer') %>

            <script src="https://unpkg.com/feather-icons"></script>
            <script>
                // Inicializar ícones
                feather.replace();

                // Script para remover badges
                document.addEventListener('click', async (e) => {
                    if (e.target.classList.contains('remove-badge')) {
                        const button = e.target;
                        const badgeId = button.dataset.badgeId;
                        try {
                            const response = await fetch(`/users/perfil-estudante/badges/${badgeId}`, {
                                method: 'DELETE',
                                headers: {
                                    'Content-Type': 'application/json'
                                }
                            });

                            if (response.ok) {
                                // Remover o badge do DOM
                                const badgeElement = button.closest('.badge');
                                badgeElement.remove();

                                // Verificar se não há mais badges
                                const userBadges = document.querySelectorAll('#user-badges .badge');
                                if (userBadges.length === 0) {
                                    const noBadgesMessage = document.createElement('p');
                                    noBadgesMessage.id = 'no-badges-message';
                                    noBadgesMessage.textContent = 'Nenhuma habilidade adicionada ainda.';
                                    document.getElementById('user-badges').appendChild(noBadgesMessage);
                                }

                                // Adicionar o badge de volta à lista de disponíveis
                                const response = await fetch(`/users/badges/${badgeId}`);
                                if (response.ok) {
                                    const badge = await response.json();

                                    // Remover mensagem de "não há mais habilidades" se existir
                                    const noAvailableBadges = document.getElementById('no-available-badges');
                                    if (noAvailableBadges) {
                                        noAvailableBadges.remove();
                                    }

                                    // Adicionar o badge à grade
                                    const skillsGrid = document.getElementById('skills-grid');
                                    const skillBadge = document.createElement('div');
                                    skillBadge.className = 'skill-badge';
                                    skillBadge.dataset.badgeId = badge.id;
                                    skillBadge.dataset.badgeName = badge.name;
                                    skillBadge.innerHTML = `
                                        <span class="badge-icon">
                                            <i data-feather="code" class="badge-icon-svg"></i>
                                        </span>
                                        <span class="badge-text">
                                            ${badge.name}
                                        </span>
                                    `;
                                    skillsGrid.appendChild(skillBadge);
                                    feather.replace();
                                }
                            } else {
                                alert('Erro ao remover habilidade.');
                            }
                        } catch (error) {
                            console.error('Erro:', error);
                            alert('Erro ao remover habilidade.');
                        }
                    }
                });

                // Script para adicionar badges ao clicar
                document.addEventListener('click', async (e) => {
                    if (e.target.closest('.skill-badge')) {
                        const badge = e.target.closest('.skill-badge');
                        const badgeId = badge.dataset.badgeId;
                        const badgeName = badge.dataset.badgeName;

                        try {
                            const response = await fetch('/users/perfil-estudante/badges', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ badgeId })
                            });

                            if (response.ok) {
                                // Remover o badge da lista de disponíveis
                                badge.remove();

                                // Verificar se não há mais badges disponíveis
                                const availableBadges = document.querySelectorAll('#skills-grid .skill-badge');
                                if (availableBadges.length === 0) {
                                    const noAvailableBadges = document.createElement('p');
                                    noAvailableBadges.id = 'no-available-badges';
                                    noAvailableBadges.textContent = 'Não há mais habilidades disponíveis para adicionar.';
                                    document.getElementById('skills-grid').appendChild(noAvailableBadges);
                                }

                                // Adicionar o badge à lista do usuário
                                const userBadges = document.getElementById('user-badges');

                                // Remover mensagem de "nenhuma habilidade" se existir
                                const noBadgesMessage = document.getElementById('no-badges-message');
                                if (noBadgesMessage) {
                                    noBadgesMessage.remove();
                                }

                                const newBadge = document.createElement('div');
                                newBadge.className = 'badge';
                                newBadge.dataset.badgeId = badgeId;
                                newBadge.innerHTML = `
                                    ${badgeName}
                                    <button class="remove-badge" data-badge-id="${badgeId}">×</button>
                                `;
                                userBadges.appendChild(newBadge);
                            } else {
                                alert('Erro ao adicionar habilidade.');
                            }
                        } catch (error) {
                            console.error('Erro:', error);
                            alert('Erro ao adicionar habilidade.');
                        }
                    }
                });
            </script>
</body>

</html>